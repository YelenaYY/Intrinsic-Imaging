[train]
device = "cuda" # or "cpu"
num_workers = 24 # number of workers for data loading

# Decomposer
[train.decomposer]
load_latest_checkpoint = false # set to false to start from scratch

train_datasets = ["datasets/output/motorbike_multi_train"]
validate_datasets = ["datasets/output/motorbike_multi_val"]
light_array = "datasets/arrays/shader.npy" 

learning_rate = 0.01
light_loss_coef = 0.01

checkpoints_folder = "checkpoints/decomposer"
log_folder = "logs/train_decomposer"
epochs = 100
lights_dim = 4
num_lights = 1

[test.decomposer]
test_datasets = ["datasets/output/motorbike_multi_test"]
light_array = "datasets/arrays/shader_multilights.npy" #or "shader.npy"
output_folder = "output/decomposer/multiplelights"

# Shader
[train.shader]
load_latest_checkpoint = false # set to false to start from scratch

train_datasets     = ["datasets/output/car_multi_train"]
validate_datasets  = ["datasets/output/car_multi_val"]
light_array        = "datasets/arrays/shader_multilights.npy" #or "shader.npy"

learning_rate      = 1e-4
epochs             = 300
batch_size         = 32
lights_dim         = 4
num_lights         = 2
expand_dim         = 8

log_folder         = "logs/train_shader"
checkpoints_folder = "checkpoints/shader"

# log_folder         = "logs/train_shader_variant"
# checkpoints_folder = "checkpoints/shader_variant"
# use_variant = true # user variant shader
use_variant = false # user variant shader

[test.shader]
light_array = "datasets/arrays/shader_multilights.npy" #or "shader.npy"
output_folder = "output/shader/multiple-lights"
# learned_shader_checkpoint = "checkpoints/shader/2025-10-20_13-28/model_10.pth"

test_datasets = ["datasets/output/car_multi_test"]

# General Composer Config
[train.composer]

# Must be one or two of the following: "shape", "category"
types_to_train = ["category"] 

learned_decomposer_checkpoint = "checkpoints/decomposer/2025-10-19_14-17_multi-lights/model_99.pth"
learned_shader_checkpoint = "checkpoints/shader/2025-10-19_19-33_multi-lights/model_49.pth"

# learned_decomposer_checkpoint = "checkpoints/decomposer/2025-10-14_21-04/model_99.pth"
# learned_shader_checkpoint = "checkpoints/shader/2025-10-18_09-25/model_29.pth"

use_shader_variant = true
# use_shader_variant = false

light_array        = "datasets/arrays/shader_multilights.npy" #or "shader.npy"

learning_rate      = 1e-2
epochs             = 30
batch_size         = 32
lights_dim         = 4
num_lights         = 1
expand_dim         = 8

light_loss_coef = 1
unlabel_loss_coef  = 1.0
labeled_loss_coef  = 1.0


# Overwrites general composer config for transfer type == "shape"
[train.composer.shape]
load_latest_checkpoint = false # set to false to start from scratch
checkpoints_folder = "checkpoints/composer_shape"
log_folder         = "logs/train_composer_shape"

labeled_train_datasets     = ["datasets/output/cone", "datasets/output/cylinder", "datasets/output/sphere", "datasets/output/torus", "datasets/output/cube"]
unlabeled_train_datasets     = ["datasets/output/suzanne_train", "datasets/output/teapot_train", "datasets/output/bunny_train"]
unlabeled_validate_datasets  = ["datasets/output/suzanne_val", "datasets/output/teapot_val", "datasets/output/bunny_val"]
schedule = [["normals", 0, 30]] # means update norms decoder from epoch 0 to 30, could add more items to the list to update more decoders

# Overwrites general composer config for transfer type == "shape"
[train.composer.category]
epochs = 100
load_latest_checkpoint = false # set to false to start from scratch
checkpoints_folder = "checkpoints/composer_category"
log_folder         = "logs/train_composer_category"

labeled_train_datasets     = ["datasets/output/airplane_multi_train"]
unlabeled_train_datasets     = ["datasets/output/car_multi_train"]
unlabeled_validate_datasets  = ["datasets/output/car_multi_val"]
schedule = [["reflectance", 0, 100], ["normals", 0, 100], ["lights", 0, 100]]

[test.composer]
light_array = "datasets/arrays/shader.npy"
types_to_test = ["category"]

[test.composer.shape]
checkpoints_folder = "checkpoints/composer_shape"
test_datasets = ["datasets/output/suzanne_test", "datasets/output/teapot_test", "datasets/output/bunny_test"]
output_folder = "output/composer_shape"
use_shader_variant = true
max_num_images_per_dataset = 10

# use this if you want to test a specific checkpoint
# learned_composer_checkpoint = "checkpoints/composer_shape/2025-10-19_16-37/model_29.pth"

[test.composer.category]
checkpoints_folder = "checkpoints/composer_category"
test_datasets = ["datasets/output/car_multi_test"]
output_folder = "output/composer_category"
use_shader_variant = true
max_num_images_per_dataset = 10

learned_composer_checkpoint = "checkpoints/composer_category/2025-10-19_21-34/model_0.pth"
